

	func MyList {
    
    Node *first;
    Node *last;
    Node *pointer;
    
    //constructor
    MyList() {
    first = null;
    last = null;    
    }
    
	List::List(d) {
    Node *node = new Node(d);
    first = node;
    last = node;
    node.next = null;
    pointer = null;
    }
    
    //MÃ©todos
    
	public boolean isEmpty() 	{
		if (first == null || last == null)
			return true;
		else
			return false;
	}

public void insertFirst(int d)
	{
		Node node;
		node = new Node(d);
		if (isEmpty())
		{
			first = node;
			last = node;		}
		else {
			node.first = first;
			first.last = node;
			first = node;
		}
		first.last = null;
		last.first = null;
	}
  
  	public void insertLast(int d)
	{
		Node node;
		node = new Node(d);
		if (isEmpty())
		{
			first = node;
			ultimo = node;
			node.next = null;
		}
		else
			last.next = nuevo;
			last = node;
	}
  
  
	public void deleteFirst()
	{
		if (isEmpty())
		if (first.next == null)			{
		first = ultimo = null;}
			else			{
				first = first.next;
			}
      
 
 	public void deleteLast()
	{
		if (isEmpty())
			if (first.next == last)	{
			first = last = null;}
			else	{
				pointer = first;
				while (pointer.next != last) {
					pointer = pointer.next;
				}
				last = pointer;
				last.next = null;
				pointer = null;
			}
}

  
  
